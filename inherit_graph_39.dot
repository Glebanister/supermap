digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="supermap::KeyValueStorage\l\< Key, Value, IndexT \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsupermap_1_1KeyValueStorage.html",tooltip="An abstract key-value storage."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="supermap::ExtractibleKey\lValueStorage\< Key, Value,\l IndexT \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsupermap_1_1ExtractibleKeyValueStorage.html",tooltip="KeyValueStorage that can be extracted to the vector."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="supermap::BST\< Key,\l Value, IndexT \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsupermap_1_1BST.html",tooltip="Implementation of Binary Search Tree with std::map."];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="supermap::Supermap\l\< Key, Value, IndexT \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsupermap_1_1Supermap.html",tooltip="Key-value storage. Stores all values on disk. The index is partially stored in RAM...."];
}
